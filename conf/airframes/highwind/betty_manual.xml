<!-- this is a kite frame equiped with Lisa/M 2.0, Aspirin 2.2, ublox 6 type gps and Eagle Tree Airspeed sensor -->

<!--
     Applicable configuration:
     airframe="airframes/highwind/betty_manual.xml"
     radio="radios/cockpitSX.xml"
     telemetry="telemetry/default_rotorcraft.xml"
     flight_plan="flight_plans/dummy.xml"
     settings="settings/rotorcraft_basic.xml settings/control/rotorcraft_guidance.xml settings/control/stabilization_att_int.xml"
-->

<airframe name="betty_manual">

  <servos driver="Pwm">
    <servo name="AILERON_LEFT" no="0" min="1000" neutral="1500" max="2000"/>
    <servo name="AILERON_RIGHT" no="1" min="1000" neutral="1500" max="2000"/>
    <servo name="FLAP_LEFT"  no="2" min="1000" neutral="1500" max="2000"/>
    <servo name="FLAP_RIGHT"  no="3" min="1000" neutral="1500" max="2000"/>
    <servo name="ELEVATOR"  no="4" min="1000" neutral="1500" max="2000"/>
    <servo name="RUDDER"  no="5" min="1000" neutral="1500" max="2000"/>
    <servo name="TETHER"  no="6" min="1000" neutral="1000" max="2000"/>
  </servos>

  <commands>
    <axis name="PITCH"  failsafe_value="0"/>
    <axis name="ROLL"   failsafe_value="0"/>
    <axis name="YAW"    failsafe_value="0"/>
    <axis name="THRUST" failsafe_value="0"/>

    <axis name="RC_AILERON_LEFT" failsafe_value="0"/>
    <axis name="RC_AILERON_RIGHT" failsafe_value="0"/>
    <axis name="RC_FLAP_LEFT" failsafe_value="0"/>
    <axis name="RC_FLAP_RIGHT" failsafe_value="0"/>
    <axis name="RC_RUDDER" failsafe_value="0"/>
    <axis name="RC_ELEVATOR" failsafe_value="0"/>
    <axis name="RC_TETHER" failsafe_value="0"/> 
    <axis name="RC_MODE" failsafe_value="0"/>
    <axis name="RC_FLAP" failsafe_value="0"/>
    <axis name="RC_AILERON" failsafe_value="0"/>
  </commands>

<!-- the order of the channels on a spektrum is always as follows :
 *
 * Throttle   0
 * Aileron    1
 * Elevator   2
 * Rudder     3
 * Gear       4
 * Flap/Aux1  5
 * Aux2       6
 * Aux3       7
 * Aux4       8
 * Aux5       9
 * Aux6      10
 * Aux7      11
 -->

<!--
  <rc_commands>
    <set command="RC_AILERON_LEFT" value="@THRUST"/>
    <set command="RC_AILERON_RIGHT" value="@ROLL"/>
    <set command="RC_FLAP_RIGHT" value="@PITCH"/>
    <set command="RC_FLAP_RIGHT" value="@YAW"/>
    <set command="RC_RUDDER" value="@GEAR"/>
    <set command="RC_ELEVATOR" value="@FLAP"/>
    <set command="RC_TETHER" value="@AUX2"/>
    <set command="RC_MODE" value="@AUX3"/>
  </rc_commands>
-->

  <rc_commands>
    <set command="RC_AILERON_LEFT" value="@ROLL"/>
    <set command="RC_AILERON_RIGHT" value="-@ROLL"/>
<!-- servo's in the same directen, use negative to roll -->
    <set command="RC_FLAP_LEFT" value="@FLAP"/>
    <set command="RC_FLAP_RIGHT" value="@FLAP"/>
<!-- the same because used for lift when servo's in same direction
use negative when in mirror -->
    <set command="RC_RUDDER" value="@YAW"/>
    <set command="RC_ELEVATOR" value="@PITCH"/>
    <set command="RC_TETHER" value="@AUX2"/>
    <set command="RC_MODE" value="@AUX3"/>
  </rc_commands>

  <command_laws>

<!-- mode 1 ground station controll, mode 2 manual control -->

    <call fun="set_servo_run(values)"/>
    <set servo="AILERON_LEFT"  value= "@RC_MODE > 2000 ? @RC_AILERON_LEFT : set_servo.commands[0]"/>
    <set servo="AILERON_RIGHT"  value= "@RC_MODE > 2000 ? @RC_AILERON_RIGHT : set_servo.commands[1]"/>
    <set servo="FLAP_LEFT"  value= "@RC_MODE > 2000 ? @RC_FLAP_LEFT : set_servo.commands[2]"/>
    <set servo="FLAP_RIGHT"  value= "@RC_MODE > 2000 ? @RC_FLAP_RIGHT : set_servo.commands[3]"/>
    <set servo="RUDDER"  value= "@RC_MODE > 2000 ? @RC_RUDDER : set_servo.commands[4]"/>
    <set servo="ELEVATOR"  value= "@RC_MODE > 2000 ? @RC_ELEVATOR : set_servo.commands[5]"/>
    <set servo="TETHER"  value= "@RC_MODE > 2000 ? @RC_TETHER : set_servo.commands[6]"/>

  </command_laws>

  <section name="SET_SERVO" prefix="SET_SERVO_">
     <define name="TRIM" value="{0, 0, 0, 0, 0, 0, 0}"/>
     <define name="NB_SERVO" value="7"/>
     <define name="MAX_SERVO" value="9600"/>
     <define name="MIN_SERVO" value="-9600"/>
  </section>


  <include href="conf/airframes/highwind/calib/asp22-186.xml"/>

  <section name="IMU" prefix="IMU_">
<!-- for correcting Lisa oriÃ«ntation (ground station stuff) -->
    <define name="BODY_TO_IMU_PHI"   value="0." unit="deg"/>
    <define name="BODY_TO_IMU_THETA" value="0." unit="deg"/>
    <define name="BODY_TO_IMU_PSI"   value="0." unit="deg"/>
  </section>

 <section name="AUTOPILOT">
   <define name="MODE_MANUAL" value="AP_MODE_ATTITUDE_DIRECT"/>
   <define name="MODE_AUTO1"  value="AP_MODE_ATTITUDE_DIRECT"/>
   <define name="MODE_AUTO2"  value="AP_MODE_ATTITUDE_DIRECT"/>
   <!--define name="MODE_AUTO1"  value="AP_MODE_ATTITUDE_Z_HOLD"/-->
   <!--define name="MODE_AUTO2"  value="AP_MODE_HOVER_Z_HOLD"/-->
 </section>

 <section name="BAT">
   <define name="CATASTROPHIC_BAT_LEVEL" value="10.0" unit="V"/>
   <define name="MAX_BAT_LEVEL" value="12.6" unit="V"/>
 <!--  <define name="VOLTAGE_ADC_SCALE" value="0.0883"/>
   <define name="VOLTAGE_OFFSET" value="-0.0191" unit="V"/>
   <define name="VoltageOfAdc(adc)" value ="(VOLTAGE_ADC_SCALE * adc + VOLTAGE_OFFSET)"/>-->
 </section>

<!-- for autopilot, leave it to prevent errors -->
  <section name="STABILIZATION_RATE" prefix="STABILIZATION_RATE_">

    <define name="SP_MAX_P" value="10000"/>
    <define name="SP_MAX_Q" value="10000"/>
    <define name="SP_MAX_R" value="10000"/>

    <define name="GAIN_P" value="400"/>
    <define name="GAIN_Q" value="400"/>
    <define name="GAIN_R" value="350"/>

  </section>

  <section name="STABILIZATION_ATTITUDE" prefix="STABILIZATION_ATTITUDE_">

    <!-- setpoints -->
    <define name="SP_MAX_PHI"     value="45." unit="deg"/>
    <define name="SP_MAX_THETA"   value="45." unit="deg"/>
    <define name="SP_MAX_PSI"     value="30."  unit="deg"/>
    <define name="SP_MAX_R"       value="90." unit="deg/s"/>
    <define name="SP_MAX_P"       value="90." unit="deg/s"/>
    <define name="DEADBAND_R"     value="250"/>
    <define name="DEADBAND_A"     value="250"/>
    <define name="SP_PSI_DELTA_LIMIT"     value="30."  unit="deg"/>

    <!-- reference -->
    <define name="REF_OMEGA_P"  value="1200" unit="deg/s"/>
    <define name="REF_ZETA_P"   value="0.7"/>
    <define name="REF_MAX_P"    value="200." unit="deg/s"/>
    <define name="REF_MAX_PDOT" value="RadOfDeg(500.)"/>

    <define name="REF_OMEGA_Q"  value="1200" unit="deg/s"/>
    <define name="REF_ZETA_Q"   value="0.7"/>
    <define name="REF_MAX_Q"    value="200." unit="deg/s"/>
    <define name="REF_MAX_QDOT" value="RadOfDeg(500.)"/>

    <define name="REF_OMEGA_R"  value="1200" unit="deg/s"/>
    <define name="REF_ZETA_R"   value="0.7"/>
    <define name="REF_MAX_R"    value="200." unit="deg/s"/>
    <define name="REF_MAX_RDOT" value="RadOfDeg(500.)"/>

    <!-- feedback -->
    <define name="PHI_PGAIN"  value="375"/>
    <define name="PHI_DGAIN"  value="490"/>
    <define name="PHI_IGAIN"  value="600"/>

    <define name="THETA_PGAIN"  value="500"/>
    <define name="THETA_DGAIN"  value="750"/>
    <define name="THETA_IGAIN"  value="300"/>

    <define name="PSI_PGAIN"  value="575"/>
    <define name="PSI_DGAIN"  value="225"/>
    <define name="PSI_IGAIN"  value="10"/>

    <!-- feedforward -->
    <define name="PHI_DDGAIN"   value=" 300"/>
    <define name="THETA_DDGAIN" value=" 300"/>
    <define name="PSI_DDGAIN"   value=" 300"/>

    <define name="PHI_AGAIN"   value="0"/>
    <define name="THETA_AGAIN" value="0"/>
    <define name="PSI_AGAIN"   value="0"/>
  </section>

  <section name="INS" prefix="INS_">
    <define name="BARO_SENS" value="22.4" integer="16"/>
  </section>

 <section name="GUIDANCE_V" prefix="GUIDANCE_V_">
   <define name="MIN_ERR_Z"   value="POS_BFP_OF_REAL(-10.)"/>
   <define name="MAX_ERR_Z"   value="POS_BFP_OF_REAL( 10.)"/>
   <define name="MIN_ERR_ZD"  value="SPEED_BFP_OF_REAL(-10.)"/>
   <define name="MAX_ERR_ZD"  value="SPEED_BFP_OF_REAL( 10.)"/>
   <define name="MAX_SUM_ERR" value="2000000"/>
   <define name="HOVER_KP"    value="400"/>
   <define name="HOVER_KD"    value="350"/>
   <define name="HOVER_KI"    value="144"/>
   <!-- 1.5m/s for full stick : BOOZ_SPEED_I_OF_F(1.5) / (MAX_PPRZ/2) -->
   <define name="RC_CLIMB_COEF" value ="163"/>
   <!-- BOOZ_SPEED_I_OF_F(1.5) * 20% -->
   <define name="RC_CLIMB_DEAD_BAND" value ="160000"/>
   <define name="GUIDANCE_V_NOMINAL_HOVER_THROTTLE" value ="0.9"/>
  </section>

  <section name="AHRS" prefix="AHRS_">
    <define name="H_X" value=" 0.47577"/>
    <define name="H_Y" value=" 0.11811"/>
    <define name="H_Z" value=" 0.87161"/>
  </section>

 <section name="GUIDANCE_H" prefix="GUIDANCE_H_">
   <define name="PGAIN" value="50"/>
   <define name="DGAIN" value="50"/>
   <define name="IGAIN" value="0"/>
 </section>

 <section name="MISC">
   <define name="FACE_REINJ_1"  value="1024"/>
 </section>

 <section name="SIMULATOR" prefix="NPS_">
   <define name="ACTUATOR_NAMES"  value="{&quot;front_motor&quot;, &quot;back_motor&quot;, &quot;right_motor&quot;, &quot;left_motor&quot;}"/>
   <define name="INITIAL_CONDITITONS" value="&quot;reset00&quot;"/>
   <define name="SENSORS_PARAMS" value="&quot;nps_sensors_params_booz2_a1.h&quot;"/>
 </section>


<!-- end of autopilot -->

 <modules main_freq="512">
   <!--load name="vehicle_interface_overo_link.xml"/-->
   <load name="gps_ubx_ucenter.xml"/>

   <load name="airspeed_ets.xml">
     <define name="AIRSPEED_ETS_SCALE"   value="1.0"/>
     <!-- define name="AIRSPEED_ETS_OFFSET"  value="-1.6"/ -->
     <define name="AIRSPEED_ETS_I2C_DEV" value="i2c2"/>
     <define name="SENSOR_SYNC_SEND"/>
   </load>


</modules>

  <firmware name="rotorcraft">
    <target name="ap" board="lisa_m_2.0">
      <subsystem name="radio_control" type="spektrum">
	<define name="RADIO_MODE" value="RADIO_AUX3"/>
	<define name="RADIO_KILL_SWITCH" value="9600"/><!-- set it on 'on' because we want it allways turned on -->
	<define name="USE_KILL_SWITCH_FOR_MOTOR_ARMING" value="1"/>
	<configure name="USE_SECONDARY_SPEKTRUM_RECEIVER" value="1"/>
      </subsystem>

      <configure name="AHRS_PROPAGATE_FREQUENCY" value="512"/>
      <configure name="LISA_M_BARO" value="BARO_MS5611_SPI"/>
    </target>

    <target name="nps" board="pc">
      <subsystem name="fdm"           type="jsbsim"/>
      <subsystem name="radio_control" type="ppm"/>
    </target>

    <subsystem name="set_servo"/>
    <subsystem name="actuators"     type="pwm">
      <define name="SERVO_HZ" value="40"/><!-- because of analog servo, minimum 20 -->
      <define name="USE_SERVOS_7AND8"/><!-- no i2c 1-->
    </subsystem>

    <subsystem name="telemetry"     type="transparent"/>
    <subsystem name="imu"           type="aspirin_v2.1"/>
    <subsystem name="gps"           type="ublox"/>
    <subsystem name="stabilization" type="int_quat"/>
    <subsystem name="ahrs"          type="int_cmpl_quat"/>
      <define name="AHRS_GRAVITY_UPDATE_COORDINATED_TURN" value="TRUE"/>
      <define name="AHRS_GRAVITY_UPDATE_NORM_HEURISTIC" value="TRUE"/>
    <subsystem name="ins"/>
    <define name="USE_I2C2"/>
  </firmware>


  <firmware name="lisa_test_progs">
    <target name="test_led"			board="lisa_m_2.0">
        <configure name="SYS_TIME_LED" value="none"/>
    </target>
    <target name="test_uart"			board="lisa_m_2.0"/>
    <target name="test_servos"			board="lisa_m_2.0"/>
    <target name="test_telemetry"		board="lisa_m_2.0"/>
    <target name="test_imu_aspirin"		board="lisa_m_2.0"/>
    <target name="test_rc_spektrum"		board="lisa_m_2.0"/>
    <target name="test_baro"			board="lisa_m_2.0"/>
    <target name="test_imu_b2"			board="lisa_m_2.0"/>
    <target name="test_can"			board="lisa_m_2.0"/>
  </firmware>
</airframe>
